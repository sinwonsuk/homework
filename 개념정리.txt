NameSpace

그냥 같은거 이름 정리,묶어주는 용도

Using 으로 이름 줄이기 가능 



c# 배열 

보통 배열 문법 

int[] Arr = new int[3] { 1, 2, 3 };

줄이기 가능
 
int[] Arr = {1,2,3}; 

다차원 배열은 


 Rectangular 배열

string[,] Depts = {{"김과장", "경리부"},{"이과장", "총무부"}};


string[,,] Cubes = {{{1,2},{1,2}},{{1,3},{1,5}}} 이런 형태 


가변 배열


1차 배열은 적어야함 
int [][] Arr = new int[2][];

각 1차 배열 요소당 서로 다른 크기의 배열 할당 가능

Arr[0] = new int[2]{1,2};
Arr[1] = new int[3] { 1, 2, 3 };


가변 배열을 사용하는 이유는 메모리 낭비를 줄이기 위해 

다만 나의 생각은 메모리의 낭비는 줄일수 있지만 연산량이 많이 늘어나지 않을까 라는 생각도 듬(동적에서 배열을 늘리고 줄이기 떄문에) 

어차피 쉐도우 복싱하는 기분이라 해봐야 알듯 별 차이도 안날거고 




C# 배열의 사용

어려운 개념은 아니고 그냥 자료구조 처럼 함수랑 프로퍼티? 를 사용할수 있다고 함 


C# 배열의 전달

배열은 래퍼런스 이다.

 by value(값의 복사 개념)가 아닌

 by Reference (주소의 복사 개념) 이다

배열 자체의 전체 래퍼런스 주소


C# 문자열 정리 

C# 의 문자열은 값을 바꿀수 없다. 

바꿔지는 것처럼 보일수 있는데 실제론 

삭제하고 다시 만들어지는 개념이다 . 

그래서 많이 쓰는 게 StringBuilder 클래스 를 사용한다. 

보통 내가 알기로 코딩을 하면서 소멸과 생성 이 제일 연산을 많이 잡아 먹는걸로 알고 있는데 

위에 StringBuilder 라는 클래스를 사용하면 생성 소멸하지 않고 문자열을 갱신하는거 같다. 

다만 동적할당이기 때문에 사용할거면 capacity를 정하고 사용하면 더 효율적일것 같다. 

문자열 자체는 char의 배열이다. 

그리고 문자 자체는 원래 숫자로 이루어져 있다(아스키 코드) 


C# 클래스 정리

자동으로 래퍼런스 타입 으로 만들어주는듯

Cat kitty = new Cat("ad","ADD");

Cat kitty 는 스택영역에 있는 애임(kitty는 그냥 변수임) 

kitty는 힙영역의 Cat을 가리키는 용도일뿐임(단지 메모리의 주소값만 가지고 있는애임) 

내 생각엔 kitty의 메모리는 8바이트만 있을거 같긴한데 관리하는 애라고 c#에서 못보게 막아둔거 같음 




Cat kitty = new Cat("ad","ADD");
kitty.num = 1;

Cat kitty2 = kitty;
kitty2.num = 2;

만약 이렇게 하면 kitty2 와 kitty는 같은 주소값을 가지고 있는 것이니

둘중 아무거나 값을 변경하면 둘다 영향을 받게 된다. 

c# 은 아예 동적할당(c++에선 그렇게 부름 new 연산자를 사용한다고도 함) 으로만 클래스 객체가 만들어지는거 같음 

이유는? 스택영역 자체의 크기가 작아서? 오버플로우 현상이 일어난다고 하지만 난 실제로 겪어본적이 없음

아무튼 이유자체는 알겠음 (근데 스택영역은 그 메서드가 끝나면 알아서 지워지는데)

그리고 신기한거 -> 이거 안씀 보통 c++에서 *cat 이렇게 하는거 귀찮아서 -> 이거 쓰는데 똑같은 이유인거 같음

그리고 소멸자도 굳이 안만들어줘도 되는듯 가비지 컬렉터라고 알아서 지워 준다고 하는데 c++에서 나도 소멸자 호출하는거 귀찮아서 shared_Ptr이라고 썼었는데(참조값이 0 이 되면 알아서 삭제함) 
그거랑 같은 원리인가? 나중에 찾아봐야 할듯 

이니셜라이즈 보단 최근에 나온? Name = "DADAf"; 이걸 쓰는듯 


c#의 이벤트라고 새로운 문법이 있음 

함수 포인터랑 비슷한거 같긴 한데 특이하게 이벤트의 추가(+=) 및 제거(-=)만 가능하다. 

근데 함수포인터 잘 기억이 안남... 나중에 질문 

쓰는법이랑 문법은 대충 알겠음 


c# 중의 특이 하다고 여겨지는게 속성이라는 클래스 맴버이다. 

c++ 에서 priviate 에 있는 변수를 쓰고 싶을떄 직접 함수를 만들어야 했는데 

여긴 클래스 자체에서 제공해주는 거 같다. 	




c# 구조체 정리 

자동으로 Value 값으로 만들어주는듯 

단순한것들 아니면 왠만하면 class를 많이 쓸거 같긴함 

그냥 값들 저장? 하는 용도로 쓸거 같다. 


IEnumerable, IEnumerator 인터페이스 


음.. 잘 이해한건지 모르겠지만 일단 c++의 이터레이터와 좀 유사한거 같음(근데 잘 기억이 안남)

C# 의 Collection(자료를 담는 구조) 들은 보통 foreach(자동 반복문)로 순회 하기 위해선 IEnumerable 이 필요함 

이 IEnumerable 는 단지 IEnumerator를 반환하는 함수만 제공하고 있음 

IEnumerator은 쉽게 말하면 move next로 가서 다음 값이 있으면 true 없으면 false로 반환해줌 

이러한 방식이 유효한 이유는 링크드 리스트(순차적으로 연결되어(기차처럼)있는 형식 ) 라는 형태를 유지하고 있기 떄문에 가능함

인터페이스가 먼지도 잘 모르겠음 



C# yield

그냥 단순하게 루프 돌떄마다 다음 리턴값을 정해줄수 있다. 

이걸 쓰는 이유는 만약 데이타의 양이 커서 모든 데이타를 한꺼번에 리턴하는 것하는 것 보다 조금씩 리턴하는 것이 더 효율적일 경우

어떤 메서드가 무제한의 데이타를 리턴할 경우 라고 하는데 써봐야 알거 같다. 












